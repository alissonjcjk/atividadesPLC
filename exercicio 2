package barbearia;

import java.util.Scanner;

public class BarbeiroDorminhoco {
    String[] nCadeiras;
    int clientes;
    int clientesEsperando = 0;

    BarbeiroDorminhoco(int nCadeirasDisponiveis, int totalClientes) {
        nCadeiras = new String[nCadeirasDisponiveis];
        clientes = totalClientes;

        // Thread do barbeiro
        Thread tBarbeiro = new Thread(this::barbeiro);
        tBarbeiro.start();

        // Thread dos clientes
        Thread tClientes = new Thread(this::clientes);
        tClientes.start();
    }

    private void barbeiro() {
        while (true) {
            synchronized (this) {
                while (clientesEsperando == 0) {
                    try {
                        System.out.println("Barbeiro dormindo...");
                        wait(); 
                    } catch (InterruptedException e) {
                        e.printStackTrace();
                    }
                }

                for (int i = 0; i < nCadeiras.length; i++) {
                    if (nCadeiras[i] != null) {
                        System.out.println("Barbeiro atendendo " + nCadeiras[i]);
                        nCadeiras[i] = null;
                        clientesEsperando--;
                        System.out.println("Cadeira " + i + " desocupada");
                        break;
                    }
                }
            }

            // Simula o tempo de atendimento
            try {
                Thread.sleep(2000);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        }
    }

    private void clientes() {
        int idCliente = 1;

        while (clientes > 0) {
            final int id = idCliente;

            new Thread(() -> {
                synchronized (this) {
                    boolean sentou = false;

                    for (int i = 0; i < nCadeiras.length; i++) {
                        if (nCadeiras[i] == null) {
                            nCadeiras[i] = "Cliente " + id;
                            clientesEsperando++;
                            System.out.println("Cliente " + id + " sentou na cadeira " + i);
                            notify();
                            sentou = true;
                            break;
                        }
                    }

                    if (!sentou) {
                        System.out.println("Cliente " + id + " foi embora (sem cadeira disponível)");
                    }
                }
            }).start();

            idCliente++;
            clientes--;

            // Clientes chegam a cada 1 segundo
            try {
                Thread.sleep(1000);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        }
    }

    public static void main(String[] args) {
        Scanner leitor = new Scanner(System.in);
        System.out.println("Informe a quantidade de cadeiras da barbearia:");
        int cadeiras = leitor.nextInt();

        System.out.println("Informe a quantidade de clientes que irão chegar:");
        int clientes = leitor.nextInt();

        new BarbeiroDorminhoco(cadeiras, clientes);
    }
}
